/* eslint-disable */
/**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of queries in this project and run
 *
 * npm run generate
 *
 * for this file to be re-created
 */

import * as Types from '../../store/apis/types.generated';

import { api } from 'src/store/graphqlBaseApi';
export type GetRuleOptionsQueryVariables = Types.Exact<{
  portId: Types.Scalars['Int'];
}>;


export type GetRuleOptionsQuery = { __typename?: 'Query', ruleOptions: Array<string> };


export const GetRuleOptionsDocument = `
    query GetRuleOptions($portId: Int!) {
  ruleOptions(portId: $portId)
}
    `;

const injectedRtkApi = api.injectEndpoints({
  overrideExisting: true,
  endpoints: (build) => ({
    GetRuleOptions: build.query<GetRuleOptionsQuery, GetRuleOptionsQueryVariables>({
      query: (variables) => ({ document: GetRuleOptionsDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useGetRuleOptionsQuery, useLazyGetRuleOptionsQuery } = injectedRtkApi;

