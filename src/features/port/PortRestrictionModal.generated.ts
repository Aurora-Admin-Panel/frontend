/* eslint-disable */
/**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of queries in this project and run
 *
 * npm run generate
 *
 * for this file to be re-created
 */

import * as Types from '../../store/apis/types.generated';

import { api } from 'src/store/graphqlBaseApi';
export type GetPortQueryVariables = Types.Exact<{
  portId: Types.Scalars['Int'];
}>;


export type GetPortQuery = { __typename?: 'Query', port?: { __typename?: 'Port', id: number, config: any } };


export const GetPortDocument = `
    query GetPort($portId: Int!) {
  port(id: $portId) {
    id
    config
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  overrideExisting: true,
  endpoints: (build) => ({
    GetPort: build.query<GetPortQuery, GetPortQueryVariables>({
      query: (variables) => ({ document: GetPortDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useGetPortQuery, useLazyGetPortQuery } = injectedRtkApi;

