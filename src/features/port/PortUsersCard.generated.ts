/* eslint-disable */
/**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of queries in this project and run
 *
 * npm run generate
 *
 * for this file to be re-created
 */

import * as Types from '../../store/apis/types.generated';

import { api } from 'src/store/graphqlBaseApi';
export type GetUsersByEmailQueryVariables = Types.Exact<{
  email: Types.Scalars['String'];
  limit?: Types.InputMaybe<Types.Scalars['Int']>;
}>;


export type GetUsersByEmailQuery = { __typename?: 'Query', paginatedUsers: { __typename?: 'UserPaginationWindow', items: Array<{ __typename?: 'User', id: number, email: string }> } };


export const GetUsersByEmailDocument = `
    query GetUsersByEmail($email: String!, $limit: Int) {
  paginatedUsers(email: $email, limit: $limit) {
    items {
      id
      email
    }
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  overrideExisting: true,
  endpoints: (build) => ({
    GetUsersByEmail: build.query<GetUsersByEmailQuery, GetUsersByEmailQueryVariables>({
      query: (variables) => ({ document: GetUsersByEmailDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useGetUsersByEmailQuery, useLazyGetUsersByEmailQuery } = injectedRtkApi;

